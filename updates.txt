Version updates:

Improvements:
1. The new version of the code uses matlab struct (similar to dictionary) instead of matrix indexing. The readability of the code is much better and there is no need for the initEnv.m file for setting the global indexing variables.
2. Rewrote the dynamic grid algorithm, which is now cleaner.
3. Re-derived the theory. The entropic conditions are now documented in pdf. 
4. Added junction types onrampjunc, and offrampjunc, where onramp and offramps are controllable.
4. All array are defined as column vectors. 
5. Re-name functions and variables to make the code more readable and more precise, such as entropicSolutionAtJunc, sendingFuncAtLink, findBoundaryIntersection.
6. The original setIneqConstraints was developed in Java where index starts from 0 which is confusing in MATLAB. Modified all indexing in matlab which now starts from 1.


Details:
1. initNetwork. We no longer assume even discretization of the space. The input to setInitialCon is now a struct with fields: IC, X_grid_cum.
2. changed the INDEX_UP and INDEX_DOWN to struct (linkStr).upstream; (linkStr).downstream
3. Added a samplePoint function which only compute the vehicle id at points.
4. Added extractDensity function, which can be used to extract the density estimate at certain time.
5. In postSolution. If t_interval is shorter than dt_tol, return the middle point as the approximated found intersection point.
6. Added several functions for extracting the traffic density at any time, including searchFuncSlope, searchShocksOnLine, extractDensity.
7. Added utility functions such as groupSameElement to class.
8. Debugged the current control toolbox is working for estimation.
9. Changed the variable names in setIneqConstraints to more intuitive names.
10. Added an errors structure which supports different levels of error for each type of measurement.
11. Enabled internal and density conditions
12. When converting min(s1, s2) to linear constraints by adding bools variables, we used C=500000 which we thought was large enough. Now we used inf directly.
13. Added clear description on internal and density conditions in setIneqConstraints class
14. Updated dv_index structure which now supports internal, density, and bool variables.

- Sep 22
15. AIMSUN ramp metering has different control parameters. The simplest way is to set the flow (veh/hr) and AIMSUN will automatically approximate it.
16. Wrote a simple unit conversion function between (miles/hr, veh/hr, veh/mile) — (kph, veh/hr, veh/km) — (m/s, veh/s, veh/m). All units used internally in MATLAB are (m/s, veh/s, veh/m) including the FD parameters. The data file are all in more readable forms (miles/hr, veh/hr, veh/mile).
17. AIMSUN API has been finished and debugged.

- Sep 24
18. Added the queue threshold in the onramp. But this works only for the problem without internal and density conditions
19. Wrote a short python file to process the historical data to desired format which can be read by MATLAB. The historical data was generated by AIMSUN which is the average of 10 replications.



- Oct 21
20. If no data, then MATLAB just auto discretizes the time and space, and then simulate.
21. updateDiscretization T_junc should contain the fixed boundary discretization in the past period and the updated boundary grid in the predicted period
20. Build a link index in setineqConstraints for better tracking the position of each decision variable.
21. Added a soft queue limit constraints assuming that we do not have internal or density conditions
22. Fixed a bug in previous version which sets the data constraints incorrectly (wrong indexing).
23. Fixed all the indexing in setIneqConstraints

- Oct 23
24. Constructed the objective function, so far the result looks reasonable.
25. Modified setIneqConstraints to use absolute error instead of relative error.
26. Modified maxOnrampFlow such that the weight of onramps flows is decreasing over steps and smaller than the smallest weight of upstream freeway.
27. Modified setWorkzoneCapacity, such that the capacity upper bound only applies to the flow in the future. The flow in the past is constrained by the measurement data.
28. Updated setSoftQueueLimit in setIneqConstraints.m, such that the soft queue limit is set only in the future time.

- Oct 24
29. All communication between MATLAB and AIMSUN are done in km and hr.
30. Added a function compareSignalandData to compare the desired flow value with the approximated flow value.
31. Wrote a function in MATLAB which plots the entire horizon.

- Oct 25
32. Use green meter instead of flow meter. It now gives much better result.
33. A few bugs in AIMSUN ang file. The effective length of links are those between detectors. So the detectors should be put as close to the boundary as possible. And the work zone length is set to be 10 meters to reduce such effect.
34. Wrote a replay function in AIMSUN to see the signal control.
35. Found a bug in AIMSUN. The detector should be too close to the entrance and exit, otherwise the vehicle appears or disappears without passing the detector. This gives incorrect count.

- Feb 16
- auto logging with time stamps
- Compare q1_ds + q2_ds with q3_us; may need to only set the measurement data constraints for q1 and q2.
- Added the plotting for the soft and hard queue limit for the diverge and connection.



Issues:
- In find slope functions, if the interval gets too small, the functions returns NaN to avoid introducing large numerical error and consuming to much computation time for unnecessary accuracy. Remember to set the AdmissibleTol (the error of the number of vehicles that we would consider as negligible and regard it as an admissible solution) as a positive number which can accommodates the small error caused by the corner points too close to the interval bound.
- No off-ramp controller has been defined yet.
- The upper and lower bound for internal and density decision variables are set as -inf and inf. Put a physical bound may produce solution using less computation time.
- Check the measurement error form AIMSUN detector and recalibrate the fundamental diagram. 
- The penalty on the congestion in the current version does not support internal and density conditions. Otherwise, boolean variables must be introduced.



AIMSUN bugs:
1. API for getting the unit used in AIMSUN is not functioning. It always gives metric.
2. When using API, the first time running the replication does not work.
3. The speed of vehicles decreases as the flow increases even if it is still in free flow. From 110 to 80 km/h
4. If the detector is placed close to the exit of the network, then it could not count accurately due to the discretization of vehicle trajectory steps.